// Важный момент: свойства объйекта data будут, ТОЛЬКО если они существовали при создании экземпляра.
var data = { a: 1 }

var vm = new Vue({
	el: '#app',
	data: data,
})

vm.a = 2
//Это значит, если добавить новое свойство в data, например так:
data.b = 'h1'
//и попробовать после этого в html обратиться к ключу b с помощью {{}}, то в консоли будет ошибка о том, что такого ключа не найдено

////////////////////////////////////
var obj = {
	foo: 'bar',
}

// Object.freeze(obj) предотвращает изенение существующих ключей, это значит, что невозможно отслеживать изменения системой реактивности
Object.freeze(obj)

new Vue({
	el: '#app1',
	data: obj,
})

////////////////////////////////////
// Так выглядит использование хука жизненного цикла created, который выполнится после создания экземпляра
new Vue({
	data: {
		a: 1,
	},
	created: function () {
		console.log('Значение а:' + this.a)
	},
})
